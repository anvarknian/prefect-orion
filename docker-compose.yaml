version: '3.5'

services:
  postgres:
    command:
      - postgres
      - -c
      - max_connections=150
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres:/var/lib/postgresql/data
    healthcheck:
      interval: 10s
      retries: 60
      start_period: 2s
      test: pg_isready -q -d $${POSTGRES_DB} -U $${POSTGRES_USER} | grep "accepting connections" || exit 1
      timeout: 2s
    image: postgres:14
    restart: always
    networks:
      - prefect
  minio:
    image: minio/minio:RELEASE.2022-09-07T22-25-02Z
    environment:
      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY}
      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY}
    volumes:
      - ./volumes/minio:/data
    entrypoint: /bin/bash
    command: "-c 'mkdir -p /data/prefect-flows && sleep 10 && minio server /data --console-address :9001'"
    ports:
      - 9000:9000
      - 9001:9001
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9000/minio/health/live" ]
      interval: 5s
      timeout: 3s
      retries: 10
    networks:
      - prefect

  prefect-server:
    image: ${PREFECT_SERVER_IMAGE}
    command:
      - prefect
      - orion
      - start
    ports:
      - 4200:4200
    depends_on:
      - postgres
    volumes:
      - ${PWD}/volumes/prefect:/root/.prefect
      - ${PWD}/flows:/flows
    environment:
      PREFECT_ORION_API_HOST: 0.0.0.0
      PREFECT_ORION_DATABASE_CONNECTION_URL: ${DB_CONNECTION_URL}
      PREFECT_ORION_ANALYTICS_ENABLED: "false"
      PREFECT_LOGGING_SERVER_LEVEL: WARNING
      PREFECT_API_URL: ${PREFECT_API_URL}
    networks:
      - prefect
  prefect-agent:
    image: ${PREFECT_AGENT_IMAGE}
    command:
      - prefect
      - agent
      - start
      - -q
      - default
    depends_on:
      - prefect-server
    environment:
      PREFECT_API_URL: ${PREFECT_API_URL}
      PREFECT_LOGGING_LEVEL: DEBUG
      DOCKER_HOST: unix://var/run/docker.sock
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - prefect




  app:
    build:
      context: .
      dockerfile: app/app.Dockerfile
    command: python3 /usr/app/weather.py
    volumes:
      - ./app:/usr/app:ro
    environment:
      PREFECT_API_URL: ${PREFECT_API_URL}
      MINIO_USE_SSL: ${MINIO_USE_SSL}
      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY}
      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY}
      MINIO_ENDPOINT: ${MINIO_ENDPOINT}
      MINIO_PREFECT_FLOWS_BUCKET_NAME: ${MINIO_PREFECT_FLOWS_BUCKET_NAME}
      MINIO_PREFECT_ARTIFACTS_BUCKET_NAME: ${MINIO_PREFECT_ARTIFACTS_BUCKET_NAME}
    depends_on:
      - minio
networks:
  prefect:
    name: prefect